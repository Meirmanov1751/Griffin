import React, {useRef, useState} from 'react';
import XSS from "./tests/xss/xss";
import CSRF from "./tests/csrf/csrf";
import SqlInjection from "./tests/sqlInjection/sqlInjection";
import Clickjacking from "./tests/clickjacking/clickjacking";
import instance from "../../../../store/api";
import OWASP from "./metodology/OWASP/OWASP";
import ISSAF from "./metodology/ISSAF/ISSAF";
import CommandConsole from "../../../cmd kali linux/CommandConsole";
import PTES from "./metodology/PTES/PTES";

const PentestNew = () => {
    const [formData, setFormData] = useState({
        organizationName: '',
        personName: '',
        goalsAndTasks: '',
        dataCollection: '',
        dataFilteringAndAnalysis: '',
        dataStorage: '',
        url: '',
    });
    const inputs = useRef(null);

    const handleChange = (e) => {
        const {name, value} = e.target;
        setFormData({
            ...formData,
            [name]: value,
        });
    };

    const [data, setData] = useState("")

    const handleSubmit = async (e) => {
        e.preventDefault();
        try {
            const response = await instance.post('http://127.0.0.1:8000/api/pentesting/pentesting/', Object.assign({}, formData, data));
            // Обработка успешного ответа от сервера
            debugger
            console.log(response.data);
        } catch (error) {
            // Обработка ошибок при отправке запроса
            console.error(error);
        }
        console.log(formData)
        console.log(data)
    };
    return (
        <div >


            <form onSubmit={handleSubmit}>
                <div>
                    <h3 className={"title-h1"}>Пасивная часть проверки.</h3>
                    <input
                        className={"Osint_input"}
                        type={"search"}
                        name="organizationName"
                        ref={inputs}
                        value={formData.organizationName}
                        onChange={handleChange}
                        placeholder={"Название организаций для проведения OSINT"}
                    />
                    <input
                        className={"Osint_input"}
                        type={"search"}
                        name="personName"
                        ref={inputs}
                        value={formData.personName}
                        onChange={handleChange}
                        placeholder={"ФИО человека, который делал заказ"}
                    />

                    <textarea
                        className={"Osint_textarea"}
                        type={"search"}
                        name="goalsAndTasks"
                        ref={inputs}
                        value={formData.goalsAndTasks}
                        onChange={handleChange}
                        placeholder={"Определение целей и задач"}
                    />
                    <p className={"text"} style={{marginBottom: "10px"}}>
                        ** Прежде чем начать сбор информации, определите свои цели и задачи. Что вы хотите узнать или
                        достичь с помощью собранной информации? Это может быть анализ конкретного субъекта, мониторинг
                        активности в сети или другие задачи. **
                    </p>
                    <textarea
                        className={"Osint_textarea"}
                        type={"search"}
                        name="dataCollection"
                        ref={inputs}
                        value={formData.dataCollection}
                        onChange={handleChange}
                        placeholder={"Сбор данных"}
                    />
                    <p className={"text"} style={{marginBottom: "10px"}}>
                        ** Идентифицируйте источники, откуда вы хотите собрать информацию. Это могут быть поисковики,
                        социальные сети, форумы, базы данных государственных органов и другие ресурсы. Используйте
                        разнообразные методы сбора, включая поиск по ключевым словам, метаданным, перекрестные ссылки и
                        другие. **
                    </p>
                    <textarea
                        className={"Osint_textarea"}
                        type={"search"}
                        name="dataFilteringAndAnalysis"
                        ref={inputs}
                        value={formData.dataFilteringAndAnalysis}
                        onChange={handleChange}
                        placeholder={"Фильтрация и анализ"}
                    />
                    <p className={"text"} style={{marginBottom: "10px"}}>
                        ** После сбора информации проведите анализ и фильтрацию данных. Отсеивайте ненадежные и
                        несущественные источники. Обратите внимание на сходства и различия в разных источниках.
                        Применяйте методы анализа данных, такие как сопоставление, временная линия и графическое
                        представление. **
                    </p>
                    <textarea
                        className={"Osint_textarea"}
                        type={"search"}
                        name="dataStorage"
                        ref={inputs}
                        value={formData.dataStorage}
                        onChange={handleChange}
                        placeholder={"Сохранение данных"}
                    />
                    <p className={"text"} style={{marginBottom: "10px"}}>
                        ** Сохраняйте собранную информацию и аналитические выводы в удобном и безопасном формате. Это
                        может включать в себя создание досье, отчетов или базы данных.**
                    </p>
                </div>
                <div>
                    <h3 className={"title-h1"}>Активная часть проверки.</h3>
                    <CommandConsole/>
                    <XSS/>
                    <CSRF/>
                    <SqlInjection/>
                    <Clickjacking/>
                    <div>
                        <h3 className={"title-h1"}>Методологии.</h3>
                        <PTES/>
                        <OWASP/>
                        <ISSAF/>
                    </div>
                </div>

                <button className={"btn_add--req"}>Создать отчет по Pentest</button>
            </form>
            <div>

            </div>
        </div>
    );
};

export default PentestNew;