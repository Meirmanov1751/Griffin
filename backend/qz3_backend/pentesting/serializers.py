from rest_framework import serializers

from PTES.serializers import AuditInitiationSerializer, InformationGatheringSerializer, VulnerabilityAnalysisSerializer, \
    AccessMaintenanceSerializer, DataAnalysisAndDocumentationSerializer, AuditCompletionSerializer, \
    AuditPreparationAndPlanningSerializer, AuditExecutionAndTestingSerializer, ResultsAnalysisAndReportingSerializer
from .models import Pentest


class PentestSerializer(serializers.ModelSerializer):
    PTES_AuditInitiation = AuditInitiationSerializer(read_only=True)
    PTES_InformationGathering = InformationGatheringSerializer(read_only=True)
    PTES_VulnerabilityAnalysis = VulnerabilityAnalysisSerializer(read_only=True)
    PTES_AccessMaintenance = AccessMaintenanceSerializer(read_only=True)
    PTES_DataAnalysisAndDocumentation = DataAnalysisAndDocumentationSerializer(read_only=True)
    PTES_AuditCompletion = AuditCompletionSerializer(read_only=True)
    PTES_AuditPreparationAndPlanning = AuditPreparationAndPlanningSerializer(read_only=True)
    PTES_AuditExecutionAndTesting = AuditExecutionAndTestingSerializer(read_only=True)
    PTES_ResultsAnalysisAndReporting = ResultsAnalysisAndReportingSerializer(read_only=True)

    class Meta:
        model = Pentest
        fields = [
            'id',
            'document',
            'organizationName',
            'personName',
            'goalsAndTasks',
            'dataCollection',
            'dataFilteringAndAnalysis',
            'dataStorage',
            'url',
            'PTES_AuditInitiation',
            'PTES_InformationGathering',
            'PTES_VulnerabilityAnalysis',
            'PTES_AccessMaintenance',
            'PTES_DataAnalysisAndDocumentation',
            'PTES_AuditCompletion',
            'PTES_AuditPreparationAndPlanning',
            'PTES_AuditExecutionAndTesting',
            'PTES_ResultsAnalysisAndReporting',
        ]


class PentestListSerializer(serializers.ModelSerializer):
    PTES_AuditInitiation = AuditInitiationSerializer(read_only=True)
    PTES_InformationGathering = InformationGatheringSerializer(read_only=True)
    PTES_VulnerabilityAnalysis = VulnerabilityAnalysisSerializer(read_only=True)
    PTES_AccessMaintenance = AccessMaintenanceSerializer(read_only=True)
    PTES_DataAnalysisAndDocumentation = DataAnalysisAndDocumentationSerializer(read_only=True)
    PTES_AuditCompletion = AuditCompletionSerializer(read_only=True)
    PTES_AuditPreparationAndPlanning = AuditPreparationAndPlanningSerializer(read_only=True)
    PTES_AuditExecutionAndTesting = AuditExecutionAndTestingSerializer(read_only=True)
    PTES_ResultsAnalysisAndReporting = ResultsAnalysisAndReportingSerializer(read_only=True)

    class Meta:
        model = Pentest
        fields = [
            'id',
            'document',
            'organizationName',
            'personName',
            'goalsAndTasks',
            'dataCollection',
            'dataFilteringAndAnalysis',
            'dataStorage',
            'url',
            'PTES_AuditInitiation',
            'PTES_InformationGathering',
            'PTES_VulnerabilityAnalysis',
            'PTES_AccessMaintenance',
            'PTES_DataAnalysisAndDocumentation',
            'PTES_AuditCompletion',
            'PTES_AuditPreparationAndPlanning',
            'PTES_AuditExecutionAndTesting',
            'PTES_ResultsAnalysisAndReporting',
        ]

