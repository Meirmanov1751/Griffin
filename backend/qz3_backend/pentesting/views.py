from .pentest.open_ports.open_ports import check_open_ports
from .pentest.xss.xss import check_xss
from .pentest.sql_injection.sql_injection import check_sql
from .pentest.csrf.csrf import check_csrf
from .pentest.clickjacking.clickjacking import check_clickjacking
from django.http import JsonResponse
from rest_framework import mixins, viewsets
from .permissions import IsSuperAdmin, IsManagementCompany, IsCustomer, IsExecutive, IsForMany
from pentesting.models import Pentest
from pentesting.serializers import PentestSerializer, PentestListSerializer
from .paginations import DocumentPagination


class PentestViewSet(mixins.CreateModelMixin, mixins.ListModelMixin, mixins.RetrieveModelMixin,
                     mixins.UpdateModelMixin, mixins.DestroyModelMixin, viewsets.GenericViewSet):
    queryset = Pentest.objects.all()
    pagination_class = DocumentPagination
    serializer_class = PentestSerializer

    def get_serializer_class(self):
        if self.request.method == 'GET':
            return PentestListSerializer
        elif self.request.method == 'POST':
            return PentestSerializer
        else:
            return PentestSerializer

    def get_permissions(self):
        if self.action == 'list':
            permission_classes = [IsForMany]
        elif self.action == 'create':
            permission_classes = [IsExecutive]
        else:
            permission_classes = [IsExecutive]
        return [permission() for permission in permission_classes]


def XSSview(request):
    data = check_xss(request.GET['url'])
    return JsonResponse({"XSS": data})


def CSRFview(request):
    data = check_csrf(request.GET['url'])
    return JsonResponse({"CSRF": data})


def SQLINHECTIONview(request):
    data = check_sql(request.GET['url'])
    return JsonResponse({"SQL_Injection": data})


def Clickjakingview(request):
    data = check_clickjacking(request.GET['url'])
    return JsonResponse({"Clickjaking": data})


def CheckOpenPortsview(request):
    data = check_open_ports(request.GET['url'])
    return JsonResponse({"CheckOpenPorts": data})